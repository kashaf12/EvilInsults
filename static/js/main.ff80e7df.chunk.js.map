{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","color","setColor","useEffect","fetch","headers","mode","then","res","json","insult","console","log","chroma","random","className","style","background","position","marginTop","class","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAwDeA,MAnDf,WAAgB,IAAD,EACUC,mBAAS,MADnB,mBACPC,EADO,KACDC,EADC,OAEYF,mBAAS,CAAC,UAAW,YAFjC,mBAEPG,EAFO,KAEAC,EAFA,KAsBd,OAnBAC,qBAAU,WACTC,MAAM,+DAAgE,CACrEC,QAAS,CACR,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,IAChC,+BAAgC,kCAChC,gCAAiC,KAElCC,KAAM,SAELC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACNR,EAAQQ,EAAIE,WAEdC,QAAQC,MACRV,EAAS,CAACW,IAAOC,SAAUD,IAAOC,aAChC,IAGF,sBACCC,UAAU,MACVC,MAAO,CACNC,WAAW,+BAAD,OAAiChB,EAAM,GAAvC,eAAgDA,EAAM,GAAtD,WAHZ,UAKC,oBAAIc,UAAU,cAAd,yBACA,qBACCC,MAAO,CACNE,SAAU,WACVC,UAAW,QAHb,SAKGpB,EAGD,qBAAKqB,MAAM,qBAAX,SACC,mBACCJ,MAAO,CACNK,SAAU,UAFZ,SAIEtB,MAPH,qBAAKqB,MAAM,eC5BDE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBZ,M","file":"static/js/main.ff80e7df.chunk.js","sourcesContent":["/** @format */\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport chroma from \"chroma-js\";\n\nfunction App() {\n\tconst [data, setData] = useState(null);\n\tconst [color, setColor] = useState([\"#33ccff\", \"#ff99cc\"]);\n\tuseEffect(() => {\n\t\tfetch(\"https://evilinsult.com/generate_insult.php?lang=en&type=json\", {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t\t\"Access-Control-Allow-Headers\": \"*\",\n\t\t\t\t\"Access-Control-Allow-Methods\": \"POST, PUT, DELETE, GET, OPTIONS\",\n\t\t\t\t\"Access-Control-Request-Method\": \"*\",\n\t\t\t},\n\t\t\tmode: \"cors\",\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tsetData(res.insult);\n\t\t\t});\n\t\tconsole.log();\n\t\tsetColor([chroma.random(), chroma.random()]);\n\t}, []);\n\n\treturn (\n\t\t<div\n\t\t\tclassName='App'\n\t\t\tstyle={{\n\t\t\t\tbackground: `linear-gradient(to bottom,  ${color[0]} 0%,${color[1]} 100%)`,\n\t\t\t}}>\n\t\t\t<h1 className='header mb-2'>Evil Quotes</h1>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\tmarginTop: \"20px\",\n\t\t\t\t}}>\n\t\t\t\t{!data ? (\n\t\t\t\t\t<div class='spin'></div>\n\t\t\t\t) : (\n\t\t\t\t\t<div class='blockquote overlay'>\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: \"larger\",\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{data}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}